generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Profile {
  bio    String?
  id     Int     @default(autoincrement()) @id
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
}

model User {
  email   String   @unique
  id      Int      @default(autoincrement()) @id
  name    String?
  profile Profile?
  puzzes  Puzz[]
  hints   Hint[]
}

model Folder {
  id          Int      @default(autoincrement()) @id
  name        String?
  puzzleLevel Int
  puzzleSize  Int
  subFolders  Folder[] @relation("FolderToFolder")
  folder      Folder?  @relation("FolderToFolder", fields: [folderId], references: [id])
  folderId    Int?     @unique
  puzzes      Puzz[]
}

model Puzz {
  id          Int      @default(autoincrement()) @id
  createdAt   DateTime @default(now())
  setDate     DateTime @default(now())
  puzzleLevel Int?
  puzzleSize  Int?
  kor         String
  eng         String
  tags        String[]
  userId      Int      @unique
  user        User     @relation(fields: [userId], references: [id])
  hints       Hint[]   @relation(references: [id])
  Folder      Folder?  @relation(fields: [folderId], references: [id])
  folderId    Int?     @unique
  forked      Puzz[]   @relation("PuzzToPuzz")
  Puzz        Puzz?    @relation("PuzzToPuzz", fields: [puzzId], references: [id])
  puzzId      Int?
}

model Hint {
  id        Int     @default(autoincrement()) @id
  puzzes    Puzz[]  @relation(references: [id])
  hintWords String?
  userId    Int     @unique
  user      User    @relation(fields: [userId], references: [id])
}